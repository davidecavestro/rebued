/*
 * SpecifyBundleNameDialog.java
 *
 * Created on 18 dicembre 2005, 9.51
 */

package com.davidecavestro.rbe.gui;

import com.davidecavestro.common.gui.dialog.DialogEvent;
import com.davidecavestro.common.gui.dialog.DialogNotifier;
import com.davidecavestro.common.gui.dialog.DialogNotifierImpl;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.StringTokenizer;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author  davide
 */
public class SpecifyBundleNameDialog extends javax.swing.JDialog implements DialogNotifier {
	
	private final DialogNotifierImpl _dialogNotifier;
	
	/** Costruttore. */
	public SpecifyBundleNameDialog (java.awt.Frame parent, boolean modal) {
		super (parent, modal);
		initComponents ();
		this._dialogNotifier = new DialogNotifierImpl ();
		
		cancelButton.getInputMap (JComponent.WHEN_IN_FOCUSED_WINDOW).put (KeyStroke.getKeyStroke ("ESCAPE"), "cancel");
		cancelButton.getActionMap().put("cancel", new javax.swing.AbstractAction ("cancel"){
			public void actionPerformed (ActionEvent ae){
				cancel ();
			}
		});
		
		
		pack ();
		setLocationRelativeTo (null);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        baseNameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(java.util.ResourceBundle.getBundle("com.davidecavestro.rbe.gui.res").getString("Specify_bundle:_base_name"));
        setResizable(false);
        baseNameField.setFocusCycleRoot(true);
        this.baseNameField.getDocument ().addDocumentListener (new BaseNameListener ());
        baseNameField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                baseNameFieldPropertyChange(evt);
            }
        });
        baseNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                baseNameFieldKeyTyped(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        getContentPane().add(baseNameField, gridBagConstraints);

        jLabel1.setLabelFor(baseNameField);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, java.util.ResourceBundle.getBundle("com.davidecavestro.rbe.gui.res").getString("Please_&specify_bundle_base_name:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        getContentPane().add(jLabel1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(okButton, java.util.ResourceBundle.getBundle("com.davidecavestro.rbe.gui.res").getString("Ok"));
        okButton.setMargin(null);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        getContentPane().add(okButton, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(cancelButton, java.util.ResourceBundle.getBundle("com.davidecavestro.rbe.gui.res").getString("Cancel"));
        cancelButton.setMargin(null);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        getContentPane().add(cancelButton, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jButton3, java.util.ResourceBundle.getBundle("com.davidecavestro.rbe.gui.res").getString("Help"));
        jButton3.setActionCommand("help");
        jButton3.setMargin(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        getContentPane().add(jButton3, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

	private void baseNameFieldPropertyChange (java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_baseNameFieldPropertyChange
		check ();
	}//GEN-LAST:event_baseNameFieldPropertyChange

	private void baseNameFieldKeyTyped (java.awt.event.KeyEvent evt) {//GEN-FIRST:event_baseNameFieldKeyTyped
		
	}//GEN-LAST:event_baseNameFieldKeyTyped

	private void cancelButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		cancel ();
	}//GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
		confirm ();
	}//GEN-LAST:event_okButtonActionPerformed
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField baseNameField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
	
	private void cancel (){
		this.hide ();
	}
	
	private boolean _confirmed = false;
	private void confirm (){
		_confirmed = true;
		this._dialogNotifier.fireDialogPerformed (new DialogEvent (this, JOptionPane.OK_OPTION));
		this.hide ();
	}
	
	public String showForFile (File f) {
		show (f.getName ());
		if (_confirmed){
			return getBaseNameText ();
		}
		return null;
	}
	
	public void show (String baseName) {
		reset (baseName);
		show ();
	}
	
	private String _baseName;
	private void reset (String baseName){
		_baseName = baseName;
		baseName = baseName.substring (0, baseName.lastIndexOf (".properties"));
		this.baseNameField.setText (baseName);
		final StringTokenizer st = new StringTokenizer (baseName, "_", false);
		if (st.countTokens ()>1){
			final String prefix = st.nextToken ();
			this.baseNameField.select (prefix.length (), baseName.length ());
		}
		_confirmed = false;
		check ();
	}
	
	
	private void check (){
		final String baseName = this.baseNameField.getText ();
		this.okButton.setEnabled (baseName!=null && baseName.length ()>0 && _baseName.startsWith (baseName));
	}
	
	public String getBaseNameText (){
		return this.baseNameField.getText ();
	}
	
	public void addDialogListener (com.davidecavestro.common.gui.dialog.DialogListener l) {
		this._dialogNotifier.addDialogListener (l);
	}	
	
	public void removeDialogListener (com.davidecavestro.common.gui.dialog.DialogListener l) {
		this._dialogNotifier.removeDialogListener (l);
	}
	
	private class BaseNameListener implements DocumentListener {
		public void insertUpdate (DocumentEvent e) {check ();}
		
		public void removeUpdate (DocumentEvent e) {check ();}
		
		public void changedUpdate (DocumentEvent e) {check ();}
	}
}
